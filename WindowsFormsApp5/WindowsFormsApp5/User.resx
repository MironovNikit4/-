<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAH
        YAAAB2ABR4RaUgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAy7SURBVHhe7d1p
        rJxVHcfxgUotVMCwiGxVrLJLEIkWhYAsIiJRoyIIWmKiRpCQGCKIC0t5AcGiLIGkAqXEQIoxMeGVbAaK
        uLCrUCmLbJYKCLJFhYL+fhdap73/287cc848z8z5fpPPm6f33pl7Oedw78zznKdDRERERERERERERERE
        REREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREI9eGsqccJXPk
        avm13C4PyjJ5Sf4LFOCx5THmseYx57G3UDwWvyQemx6jlKkZMlsWyCMS/UcB2sZj1WPWY3dboR5bR/aR
        i+UBiX64wLDxWL5I9haPcVotr5InCZMeo+4xOUveK9V3sPjvqNcl+mEBo8pj/kY5SKrKvwIdJr+T6AcD
        1OYu+YKM/J8Hn5I/SfRDAGp3jxwiI9fWcoVE3zSAVV0j75Khbz05QV6U6BsFEHtZTpO3ylC2k/xRom8O
        QG/ulh1kqPqy8H99IA/PJZ/92vqmyXkSfRMA0vh1tOnSyrYSv4oZPXEAefgtwy2lVb1HOIsPGIy/yvbS
        ij4of5foiQIow1cl7iGNtp+8INETBFCW557nYCP52mcmP9Asz0H/Fj7QfCWTfwWJnhCAwXpKBnaugF/t
        94sQ0RMB0IyHpfi7AxsIb/UB7XSnrC/Fmi/RAwNoh3lSpK9I9IBN8YYKj8p1cqF4R6Fj5RjxtdVAbh5b
        x4nHmsecx57HYDQ+m+QNSrPmC3vasNuuN1v03mr+j7G5ELUhj8XDxXtZtmHzWr8zkO1EoanS5FV9vhDi
        UtlX2FCR2t664rF6mTR5QZxPGfbl+Ml9V6IHKO158eaJmwrRMLaR+M+Ff0g0xks7UZLyriTemCD64qW8
        ImcLN1igUckLwTnisR2N+VL8G8g2Mul+KdEXLuUm2VmIRrFdZZFEY7+Un8uk8gae0RcsYbn8UPz3E9Eo
        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
</value>
  </data>
</root>